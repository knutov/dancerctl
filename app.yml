# Config for dancer' app for dancerctl
# Normally should be placed to ~/.dancerctl folder and named 'app', 
# where 'app' is the name of your dancer application.
# All variables are optional except 'path' and environments. 
# Minimal config looks like:
# ---
# path: app
# production:
# ---
# where env_name can be 'production' for example.
# Most variables can be set in root level, environment level and global config.
# autoreload, autoreload_inc and daemon works only on environment level


# path to app (relative for user's home dir): app -> /home/user/app
path: app

# default environment - useful to set 'development' on developer's laptop during 
# development and 'production' on production server
env: development

# start on startall
# will be used global 'autostart' if not specified.
# can be set as 1 in global and 0 on local to start_all all apps by default and 
# not autostart this app
autostart: 0

# Where the app.sock will be stored, can also be specified in each env.
# The same with 'pid_path'
socket_path: ~/tmp

production:
  # -l /home/user/app/app.sock # by default
  # or /home/user/tmp/app.sock in this case (note 'socket_path' earlier)
  method: socket
  # same socket name as defaults
  socket_name: app.sock
  # this will be added to the end of plackup sting
  opt: "--backlog 1024 --max-requests 1000"
development:
  # -w 1
  workers: 1
  # -l localhost:3002
  method: port
  port: 3002
  # --pid /home/user/app/dev.pid
  pid_name: dev.pid
  # If you want plackup to reload app on changes
  # ... whenever a file in any of the given directories changes
  # -r -R '...' will be generated
  # use autoreload: "." to emulate -r without -R
  # comma-separated list of paths
  # see L<plackup> for details
  autoreload: "./lib/Routes,./lib,./lib/Dancer"
  # usually you want to disable daemonize -D if -r -R are used
  daemon: 0

# With env_alias ypu can use 
# dancerctl start app env_alias
# Example:
# dancerctl start app dev # will start with 'development' environment
env_alias:
  dev: development
  prod: production
  
